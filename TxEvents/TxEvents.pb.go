// Code generated by protoc-gen-go.
// source: TxEvents.proto
// DO NOT EDIT!

/*
Package TxEvents is a generated protocol buffer package.

It is generated from these files:
	TxEvents.proto

It has these top-level messages:
	CreateEvent
	TransferEvent
	UnitizeEvent
	CombineEvent
	CombineSources
*/
package TxEvents

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type CreateEvent struct {
	Counter       []byte `protobuf:"bytes,1,opt,name=Counter,proto3" json:"Counter,omitempty"`
	Address       string `protobuf:"bytes,3,opt,name=Address" json:"Address,omitempty"`
	Amount        int32  `protobuf:"varint,4,opt,name=Amount" json:"Amount,omitempty"`
	Data          string `protobuf:"bytes,5,opt,name=Data" json:"Data,omitempty"`
	Type          string `protobuf:"bytes,6,opt,name=Type" json:"Type,omitempty"`
	CreatorPubKey []byte `protobuf:"bytes,7,opt,name=CreatorPubKey,proto3" json:"CreatorPubKey,omitempty"`
}

func (m *CreateEvent) Reset()         { *m = CreateEvent{} }
func (m *CreateEvent) String() string { return proto.CompactTextString(m) }
func (*CreateEvent) ProtoMessage()    {}

type TransferEvent struct {
	SourceCounter []byte   `protobuf:"bytes,1,opt,name=SourceCounter,proto3" json:"SourceCounter,omitempty"`
	DestCounter   []byte   `protobuf:"bytes,2,opt,name=DestCounter,proto3" json:"DestCounter,omitempty"`
	Address       string   `protobuf:"bytes,3,opt,name=Address" json:"Address,omitempty"`
	Output        int32    `protobuf:"varint,4,opt,name=Output" json:"Output,omitempty"`
	Threshold     int32    `protobuf:"varint,5,opt,name=Threshold" json:"Threshold,omitempty"`
	Owners        [][]byte `protobuf:"bytes,6,rep,name=Owners,proto3" json:"Owners,omitempty"`
	PopcodePubKey []byte   `protobuf:"bytes,7,opt,name=PopcodePubKey,proto3" json:"PopcodePubKey,omitempty"`
	Data          string   `protobuf:"bytes,8,opt,name=Data" json:"Data,omitempty"`
}

func (m *TransferEvent) Reset()         { *m = TransferEvent{} }
func (m *TransferEvent) String() string { return proto.CompactTextString(m) }
func (*TransferEvent) ProtoMessage()    {}

type UnitizeEvent struct {
	SourceCounter []byte   `protobuf:"bytes,1,opt,name=SourceCounter,proto3" json:"SourceCounter,omitempty"`
	DestCounters  [][]byte `protobuf:"bytes,2,rep,name=DestCounters,proto3" json:"DestCounters,omitempty"`
	SourceOutput  int32    `protobuf:"varint,3,opt,name=SourceOutput" json:"SourceOutput,omitempty"`
	SourceAddress string   `protobuf:"bytes,4,opt,name=SourceAddress" json:"SourceAddress,omitempty"`
	DestAddress   string   `protobuf:"bytes,5,opt,name=DestAddress" json:"DestAddress,omitempty"`
	DestAmounts   []int32  `protobuf:"varint,6,rep,name=DestAmounts" json:"DestAmounts,omitempty"`
	PopcodePubKey []byte   `protobuf:"bytes,7,opt,name=PopcodePubKey,proto3" json:"PopcodePubKey,omitempty"`
	Data          string   `protobuf:"bytes,8,opt,name=Data" json:"Data,omitempty"`
}

func (m *UnitizeEvent) Reset()         { *m = UnitizeEvent{} }
func (m *UnitizeEvent) String() string { return proto.CompactTextString(m) }
func (*UnitizeEvent) ProtoMessage()    {}

type CombineEvent struct {
	SourceCounters [][]byte          `protobuf:"bytes,1,rep,name=SourceCounters,proto3" json:"SourceCounters,omitempty"`
	DestCounter    []byte            `protobuf:"bytes,2,opt,name=DestCounter,proto3" json:"DestCounter,omitempty"`
	Address        string            `protobuf:"bytes,3,opt,name=Address" json:"Address,omitempty"`
	Sources        []*CombineSources `protobuf:"bytes,4,rep,name=sources" json:"sources,omitempty"`
	Amount         int32             `protobuf:"varint,5,opt,name=Amount" json:"Amount,omitempty"`
	Recipe         string            `protobuf:"bytes,6,opt,name=Recipe" json:"Recipe,omitempty"`
	CreatorPubKey  []byte            `protobuf:"bytes,7,opt,name=CreatorPubKey,proto3" json:"CreatorPubKey,omitempty"`
	PopcodePubKey  []byte            `protobuf:"bytes,8,opt,name=PopcodePubKey,proto3" json:"PopcodePubKey,omitempty"`
	Data           string            `protobuf:"bytes,9,opt,name=Data" json:"Data,omitempty"`
}

func (m *CombineEvent) Reset()         { *m = CombineEvent{} }
func (m *CombineEvent) String() string { return proto.CompactTextString(m) }
func (*CombineEvent) ProtoMessage()    {}

func (m *CombineEvent) GetSources() []*CombineSources {
	if m != nil {
		return m.Sources
	}
	return nil
}

type CombineSources struct {
	SourceOutput int32 `protobuf:"varint,1,opt,name=SourceOutput" json:"SourceOutput,omitempty"`
	SourceAmount int32 `protobuf:"varint,2,opt,name=SourceAmount" json:"SourceAmount,omitempty"`
}

func (m *CombineSources) Reset()         { *m = CombineSources{} }
func (m *CombineSources) String() string { return proto.CompactTextString(m) }
func (*CombineSources) ProtoMessage()    {}
